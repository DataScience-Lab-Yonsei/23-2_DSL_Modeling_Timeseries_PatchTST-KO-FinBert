# -*- coding: utf-8 -*-
"""KR-FinBERT를 이용한 유튜브 영상 제목 감성분석.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V7h1-4Em2YBfyTjYwzA6LAZg0sylStez
"""

from google.colab import drive
drive.mount('/content/drive')

# 기본적인 라이브러리 불러오기
import pandas as pd
import numpy as np
from numpy import datetime64
from datetime import datetime
import math
import os
import unicodedata

# 감성분석 라이브러리 불러오기
!pip install transformers
from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import torch.nn as nn
import torch.nn.functional as F
from transformers import pipeline

# 작업 시간 확인 라이브러리 불러오기
from tqdm import tqdm
import time

# warnings 무시
import warnings
warnings.filterwarnings('ignore')

"""# 데이터 불러오기"""

data = pd.read_csv('/content/drive/MyDrive/DSL/2023-2/Modeling_Project/data/youtube_data_for_sent_analysis.csv', index_col=0)

"""# KR-FinBERT를 이용한 감성분석"""

# KR-FinBert 모델 활용
tokenizer = AutoTokenizer.from_pretrained("snunlp/KR-FinBert-SC")
model = AutoModelForSequenceClassification.from_pretrained("snunlp/KR-FinBert-SC")

# 제목 감성분석 함수
def title_sent(text):
  try:
    inputs = tokenizer(text, return_tensors='pt')
    output = model(**inputs)
    output = output.logits.tolist()[0]

    n_output = torch.tensor(output)
    predictions = nn.functional.softmax(n_output, dim=-1)
    result = predictions.detach().numpy()

    positive = result[2]
    negative = result[0]
    neutral = result[1]

    return positive, negative, neutral

  except:
    return 0, 0, 0

# 기존 데이터프레임에 제목 감성분석 결과값을 넣을 열 추가
data['title sent analysis'] = ''

# 제목 감성분석
data['title sent analysis'] = data['제목'].apply(title_sent)

# 감성분석 결과 저장
data.to_csv('/content/drive/MyDrive/DSL/2023-2/Modeling_Project/data/youtube_data_title_analysis.csv', encoding='utf-8-sig')

"""# 감성지수 만들기"""

data = pd.read_csv('/content/drive/MyDrive/DSL/2023-2/Modeling_Project/data/youtube_data_title_analysis.csv', index_col=0)

# 데이터프레임 정리하기
data.drop('조회수', axis=1, inplace=True)
data.drop('스크립트', axis=1, inplace=True)
data.drop('script tok', axis=1, inplace=True)
data.drop('script sent tok', axis=1, inplace=True)

# 감성분석 결과 분리
data.columns = ['title', 'date', 'title_sent_analysis']
data['positive'] = data['title_sent_analysis'].apply(lambda x:float(x[1:-1].split(',')[0]))
data['negative'] = data['title_sent_analysis'].apply(lambda x:float(x[1:-1].split(',')[1]))
data['neutral'] = data['title_sent_analysis'].apply(lambda x:float(x[1:-1].split(',')[2]))

# 감성지수(긍정+중립) 만들기
data['sent_score'] = data['positive'] + data['neutral']

# 일별로 시계열 데이터화(같은 일자의 점수들은 평균)
title_sent = data.groupby('date')['sent_score'].mean()

# 시리즈를 데이터프레임으로
title_sent = pd.DataFrame(title_sent)
title_sent.reset_index(inplace=True)

# 감성분석 최종 데이터프레임 저장
title_sent.to_csv('/content/drive/MyDrive/DSL/2023-2/Modeling_Project/data/3pro_title_sent.csv', encoding='utf-8-sig')